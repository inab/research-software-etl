"""
The command-line interface for the conflict detection step of the integration
"""
import argparse
import logging
from dotenv import load_dotenv
from src.application.use_cases.integration.conflict_detection import detect_conflicts 

logger = logging.getLogger("rs-etl-pipeline")

def main():
    parser =  argparse.ArgumentParser(
        description="""Detect entries that do not share links with any other entry in the group. 
        These are software with the same name, but be completely different software.
        The grouped entries are fetched from a JSON file and the disconnected entries are written 
        to another JSON file."""
    )

    parser.add_argument(
        "--grouped-entries-file", "-g",
        help=("Path to the file containing grouped entries. Generated by the grouping and recovery step of the integration. Default is 'data/grouped.json'."),
        type=str,
        dest="grouped_entries_file",
        default="data/grouped.json",
    )

    parser.add_argument(
        "--disconnected-entries-file", "-d",
        help=("Path to the file containing disconnected entries. This is the output of the process. Default is 'data/disconnected.json'."),
        type=str,
        dest="disconnected_entries_file",
        default="data/disconnected.json",
    )

    args = parser.parse_args()

    load_dotenv()

    logger.debug(f"Grouped entries file: {args.grouped_entries_file}")
    logger.debug(f"Disconnected entries file: {args.disconnected_entries_file}")

    logger.info("Detecting conflicts...")
    detect_conflicts(args.grouped_entries_file, args.disconnected_entries_file)

    logger.info("Conflict detection finished!")


if __name__ == "__main__":
    main()