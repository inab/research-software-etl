from src.application.use_cases.integration.disambiguation_file_changed import run_disambiguation
from dotenv import load_dotenv
import argparse

async def main():
    parser =  argparse.ArgumentParser(
        description=""" """
    )

    parser.add_argument(
        "--blocks-file", "-g",
        help=("Path to the file containing blocks of records. Generated by the grouping and recovery step of the integration. Default is 'data/grouped.json'."),
        type=str,
        dest="blocks_file",
        default="data/blocks.json",
    )

    parser.add_argument(
        "--conflict-blocks-file", "-d",
        help=("Path to the file containing conflict blocks. This is the output of the process. Default is 'data/conflict_blocks.json'."),
        type=str,
        dest="conflict_blocks_file",
        default="data/conflict_blocks.json",
    )

    parser.add_argument(
        "--disambiguated-blocks-file", "-d",
        help=("Path to the file containing disambiguated blocks. This is the output of the process. Default is 'data/disambiguated_blocks.json'."),
        type=str,
        dest="disambiguated_blocks_file",
        default="data/disambiguated_blocks.json",
    )

    parser.add_argument(
        "--env-file", "-e",
        help=("File containing environment variables to be set before running "),
        type=str,
        dest="env_file",
        default=".env",
    )

    args = parser.parse_args() 

    load_dotenv(args.env_file)

    blocks_file = args.blocks_file
    conflict_blocks_file = args.conflict_blocks_file
    disambiguated_blocks_file = args.disambiguated_blocks_file

    print(f"Blocks file: {blocks_file}")
    print(f"Conflict blocks file: {conflict_blocks_file}")
    print(f"Disambiguated blocks file: {disambiguated_blocks_file}")
    print(f"Env file: {args.env_file}")

    print("Running disambiguation...")

    await run_disambiguation(
        blocks_file=blocks_file,
        conflict_blocks_file=conflict_blocks_file,
        disambiguated_blocks_file=disambiguated_blocks_file
    )

    print("Disambiguation finished!")


if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
