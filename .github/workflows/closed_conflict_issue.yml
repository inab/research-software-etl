name: Handle resolved conflict

on:
  issues:
    types: [closed]

jobs:
  extract-id:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'conflict')
    steps:
      - name: Extract conflict ID from issue title
        id: extract
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          CONFLICT_ID=$(echo "${{ github.event.issue.title }}" | grep -oE 'block_id_[a-zA-Z0-9_-]+')
          echo "CONFLICT_ID=$CONFLICT_ID" >> $GITHUB_ENV

  extract-decision:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'conflict')
    outputs:
      decision: ${{ steps.set-output.outputs.decision }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Extract decision
        id: set-output
        run: |
          pip install requests
          python human_annotations/scripts/extract_decision.py "${{ github.repository }}" "${{ github.event.issue.number }}" "${{ CONFLICT_ID }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  update-disambiguation-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Update disambiguation file
        id: update-disambiguation-file
        run: |
          python src/adapters/cli/integration/update_disambiguation_after_human_resolution.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
