name: Handle resolved conflict

on:
  issues:
    types: [closed]

permissions:
  contents: write

jobs:
  extract-id:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ','), 'conflict')
    outputs:
      conflict_id: ${{ steps.extract.outputs.conflict_id }}
    steps:
      - name: Extract conflict ID from issue title
        id: extract
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          CONFLICT_ID=$(echo "${{ github.event.issue.title }}" | sed -E 's/^Manual resolution needed for //')
          echo "conflict_id=$CONFLICT_ID" >> $GITHUB_OUTPUT

  extract-decision:
    runs-on: ubuntu-latest
    needs: extract-id
    if: contains(join(github.event.issue.labels.*.name, ','), 'conflict')
    outputs:
      decision: ${{ steps.set-output.outputs.decision }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Extract decision
        id: set-output
        run: |
          pip install requests
          python human_annotations/scripts/extract_decision.py "${{ github.repository }}" "${{ github.event.issue.number }}" "${{ needs.extract-id.outputs.conflict_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push updated log
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add human_annotations/human_conflicts_log.json
          git commit -m "Update human_conflicts_log.json for ${{ needs.extract-id.outputs.conflict_id }}" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-disambiguation-file:
    runs-on: ubuntu-latest
    needs: [extract-id, extract-decision]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Pull latest committed log
        run: git pull

      - name: Update disambiguation file
        id: update-disambiguation-file
        run: |
          pip install bson
          PYTHONPATH=$(pwd) python src/adapters/cli/integration/update_disambiguation_after_human_resolution.py --conflict-id "${{ needs.extract-id.outputs.conflict_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}